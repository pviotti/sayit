trigger:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - README.md
    - .gitignore

strategy:
  matrix:
    Linux:
      imageName: 'ubuntu-latest'
    Mac:
      imageName: 'macos-latest'
    Windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'
  framework: netcoreapp3.0

steps:
- task: UseDotNet@2
  displayName: Install .NET Core SDK
  inputs:
    version: 3.0.100

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.fsproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    projects: '**/*Tests/*.fsproj'
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code coverage"'

- task: DotNetCoreCLI@2
  displayName: Install ReportGenerator tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool

- script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create reports

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml
